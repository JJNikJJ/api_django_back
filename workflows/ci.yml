name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: bikeapi
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d bikeapi"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          source .venv/bin/activate
          python manage.py migrate

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bike_api_django:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/bike_api_django:latest

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/bike_api_django:latest
          docker stop bikeapi || true
          docker rm bikeapi || true
          docker run -d --name bikeapi -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/bike_api_django:latest
          EOF
